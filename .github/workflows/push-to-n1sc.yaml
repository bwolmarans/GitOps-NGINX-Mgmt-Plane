
name: Managing NGINX configs with Github and Github Actions

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
      
      - name: Set environment variable for XC Bearer Token credentials
        run: echo "XC_BEARER_TOKEN=`echo -n "${{ secrets.XC_BEARER_TOKEN }}`" >> $GITHUB_ENV
        
      - name: Set environment variable for N1SC API timestamp
        run: echo "N1SC_TIMESTAMP=`date -u +"%Y-%m-%dT%H:%M:%SZ"`" >> $GITHUB_ENV

      - name: Set environment variable for base64 encoded config file
        run: echo "NGINX_CONF_CONFIG_FILE=`cat app-nyc-01/etc/nginx/nginx.conf | base64 -w 0`" >> $GITHUB_ENV

      - name: Set environment variable for base64 encoded config file
        run: echo "MIME_TYPES_CONFIG_FILE=`cat app-nyc-01/etc/nginx/mime.types | base64 -w 0`" >> $GITHUB_ENV

      - name: Set environment variable for base64 encoded config file
        run: echo "DEFAULT_CONF_CONFIG_FILE=`cat app-nyc-01/etc/nginx/conf.d/default.conf | base64 -w 0`" >> $GITHUB_ENV

      - name: Set environment variable for base64 encoded config file
        run: echo "SSL_CERT=`cat app-sfo-01/etc/nginx/ssl/expiring.nginx.com.crt | base64 -w 0`" >> $GITHUB_ENV

      - name: Set environment variable for base64 encoded config file
        run: echo "SSL_KEY=`cat app-sfo-01/etc/nginx/ssl/expiring.nginx.com.key | base64 -w 0`" >> $GITHUB_ENV

      - name: API call to NGINX One Saas Console
        run: |
          curl --location 'https://${{ vars.N1SC_HOSTNAME }}${{ vars.N1SC_API_PATH }}/${{ vars.N1SC_NAMESPACE }}/instances/summary' -H 'Authorization: Bearer ${{ secrets.XC_BEARER_TOKEN }}'

      - name: API call to NGINX One Saas Console
        run: |
          curl -X PUT --location 'https://${{ vars.N1SC_HOSTNAME }}${{ vars.N1SC_API_PATH }}/${{ vars.N1SC_NAMESPACE }}/instances/inst_23xYZTyZSpqa5UNi-eFcyw/config' -H 'Authorization: Bearer ${{ secrets.XC_BEARER_TOKEN }}' --data '{ "conf_path": "/etc/nginx/nginx.conf", "configs": [{"files": [{"contents": "IyBicmV0dCB3dXogaGVyZSB2aWEgbjEgYXBpCgp1c2VyICBuZ2lueDsKd29ya2VyX3Byb2Nlc3NlcyAgYXV0bzsKCmVycm9yX2xvZyAgL3Zhci9sb2cvbmdpbngvZXJyb3IubG9nIG5vdGljZTsKI3BpZCAgICAgICAgL3Zhci9ydW4vbmdpbngucGlkOwoKZXZlbnRzIHsKICAgIHdvcmtlcl9jb25uZWN0aW9ucyAgNTEyOwp9CgpodHRwIHsKICAgIGluY2x1ZGUgICAgICAgL2V0Yy9uZ2lueC9taW1lLnR5cGVzOwoKICAgIGRlZmF1bHRfdHlwZSAgYXBwbGljYXRpb24vb2N0ZXQtc3RyZWFtOwoKICAgIGxvZ19mb3JtYXQgIG1haW4gICckcmVtb3RlX2FkZHIgLSAkcmVtb3RlX3VzZXIgWyR0aW1lX2xvY2FsXSAiJHJlcXVlc3QiICcKICAgICAgICAgICAgICAgICAgJyRzdGF0dXMgJGJvZHlfYnl0ZXNfc2VudCAiJGh0dHBfcmVmZXJlciIgJwogICAgICAgICAgICAgICAgICAnIiRodHRwX3VzZXJfYWdlbnQiICIkaHR0cF94X2ZvcndhcmRlZF9mb3IiICcKICAgICAgICAgICAgICAgICAgJyIkYnl0ZXNfc2VudCIgIiRyZXF1ZXN0X2xlbmd0aCIgIiRyZXF1ZXN0X3RpbWUiICcKICAgICAgICAgICAgICAgICAgJyIkZ3ppcF9yYXRpbyIgJHNlcnZlcl9wcm90b2NvbCAnOwoKICAgIGFjY2Vzc19sb2cgIC92YXIvbG9nL25naW54L2FjY2Vzcy5sb2cgIG1haW47CgogICAgc2VuZGZpbGUgICAgICAgIG9mZjsKCiAgICBrZWVwYWxpdmVfdGltZW91dCAgNjU7CgogICAgcHJveHlfY2FjaGVfcGF0aCAvZGF0YS9uZ2lueC9jYWNoZV9iYWNrZW5kMSBrZXlzX3pvbmU9Y2FjaGVfYmFja2VuZDE6MTBtOwogICAgcHJveHlfY2FjaGVfcGF0aCAvZGF0YS9uZ2lueC9jYWNoZV9iYWNrZW5kMiBrZXlzX3pvbmU9Y2FjaGVfYmFja2VuZDI6MTBtOwogCiAgICAjZ3ppcCAgb247CiAgICBzZXJ2ZXIgewogICAgICAgIGxpc3RlbiAxMjcuMC4wLjE6ODA4MDsKICAgICAgICBsb2NhdGlvbiAvYXBpIHsKICAgICAgICAgICAgYXBpIHdyaXRlPW9uOwogICAgICAgICAgICBhbGxvdyAxMjcuMC4wLjE7CiAgICAgICAgICAgIGRlbnkgYWxsOwogICAgICAgIH0KICAgIH0KCiAgICBzZXJ2ZXIgewogICAgICAgIGxpc3RlbiA0NDMgc3NsIGRlZmF1bHRfc2VydmVyOwogICAgICAgIHNzbF9jZXJ0aWZpY2F0ZSAvZXRjL25naW54L3NzbC9leHBpcmluZy5uZ2lueC5jb20uY3J0OwogICAgICAgIHNzbF9jZXJ0aWZpY2F0ZV9rZXkgL2V0Yy9uZ2lueC9zc2wvZXhwaXJpbmcubmdpbnguY29tLmtleTsJCiAgICB9CgogICAgc2VydmVyIHsKICAgICAgICBsaXN0ZW4gOTA5MTsKICAgICAgICByZXR1cm4gMjAwICJoZWxsbyBmcm9tIGh0dHAgd29ya2xvYWQgMSBcbiI7CiAgICB9ICAgICAKICAgIHNlcnZlciB7CiAgICAgICAgbGlzdGVuIDkwOTI7CiAgICAgICAgcmV0dXJuIDIwMCAiaGVsbG8gZnJvbSBodHRwIHdvcmtsb2FkIDIgXG4iOwogICAgfQogICAgc2VydmVyIHsKICAgICAgICBsaXN0ZW4gOTA5MzsKICAgICAgICByZXR1cm4gMjAwICJoZWxsbyBmcm9tIHN0cmVhbSB3b3JrbG9hZCAxIFxuIjsKICAgIH0KIAogICAgdXBzdHJlYW0gbmdpbngxIHsKICAgICAgICBzZXJ2ZXIgMTI3LjAuMC4xOjkwOTE7CiAgICAgICAgem9uZSBteV9iYWNrZW5kMSAxMDAwMDAwOwogICAgICAgIGtlZXBhbGl2ZSAzMjsKICAgICAgICBxdWV1ZSAxMDsKICAgIH0KICAgIHVwc3RyZWFtIG5naW54MiB7CiAgICAgICAgc2VydmVyIDEyNy4wLjAuMTo5MDkyOwogICAgICAgIHpvbmUgbXlfYmFja2VuZDIgMTAwMDAwMDsKICAgICAgICBrZWVwYWxpdmUgMzI7CiAgICAgICAgcXVldWUgMjA7CiAgICB9CiAKICAgIHNlcnZlciB7CiAgICAgICAgc3RhdHVzX3pvbmUgbXlfZnJvbnRlbmQxOwogICAgICAgIGxpc3RlbiAxMjcuMC4wLjE6ODA4MTsKICAgICAgICBsb2NhdGlvbiAvZnJvbnRlbmQxIHsKICAgICAgICAgICAgcHJveHlfcGFzcyBodHRwOi8vbmdpbngxOwogICAgICAgICAgICBwcm94eV9jYWNoZSBjYWNoZV9iYWNrZW5kMTsKICAgICAgICAgICAgc3RhdHVzX3pvbmUgbXlfbG9jYXRpb25fem9uZTsKCiAgICAgICAgfQogICAgfQogICAgc2VydmVyIHsKICAgICAgICBzdGF0dXNfem9uZSBteV9mcm9udGVuZDI7CiAgICAgICAgbGlzdGVuIDEyNy4wLjAuMTo4MDgyOwogICAgICAgIGxvY2F0aW9uIC9mcm9udGVuZDIgewogICAgICAgICAgICBwcm94eV9wYXNzIGh0dHA6Ly9uZ2lueDI7CiAgICAgICAgICAgIHByb3h5X2NhY2hlIGNhY2hlX2JhY2tlbmQyOwogICAgICAgICAgICBzdGF0dXNfem9uZSBteV9sb2NhdGlvbl96b25lOwoKICAgICAgICB9CiAgICB9CiAgICBzZXJ2ZXIgewogICAgICAgbGlzdGVuIDEyNy4wLjAuMTo4MDsKICAgICAgIHNlcnZlcl9uYW1lIDEyNy4wLjAuMTsKICAgICAgIGxvY2F0aW9uIC9uZ2lueF9zdGF0dXMgewogICAgICAgICAgc3R1Yl9zdGF0dXMgb247CiAgICAgICAgICBhbGxvdyAxMjcuMC4wLjE7CiAgICAgICAgICBkZW55IGFsbDsKICAgICAgIH0KICAgIH0KICAgIGluY2x1ZGUgL2V0Yy9uZ2lueC9jb25mLmQvKi5jb25mOwp9CgpzdHJlYW0gewoKICAgIHVwc3RyZWFtIG5naW54MyB7CiAgICAgICAgem9uZSBteV9zdHJlYW1fYmFja2VuZCA2NGs7CiAgICAgICAgc2VydmVyIDEyNy4wLjAuMTo5MDkzOwogICAgfQogCiAgICBsb2dfZm9ybWF0IGJhc2ljICckcmVtb3RlX2FkZHIgWyR0aW1lX2xvY2FsXSAnCiAgICAgICAgICAgICAgICAgICAgICckcHJvdG9jb2wgJHN0YXR1cyAkYnl0ZXNfc2VudCAkYnl0ZXNfcmVjZWl2ZWQgJwogICAgICAgICAgICAgICAgICAgICAnJHNlc3Npb25fdGltZSc7CiAgICBhY2Nlc3NfbG9nIC92YXIvbG9nL25naW54L2FjY2Vzcy5sb2cgYmFzaWM7CiAKICAgIHNlcnZlciB7CiAgICAgICAgbGlzdGVuIDgwODM7CiAgICAgICAgc3RhdHVzX3pvbmUgdGNwX3N0cmVhbV9zZXJ2ZXI7CiAgICAgICAgcHJveHlfcGFzcyBuZ2lueDM7CiAgICB9Cn0K","name": "nginx.conf"}],"name": "/etc/nginx" },{ "files": [     {                    "contents": "c2VydmVyIHsKICAgIGxpc3RlbiAgICAgICA4MCBkZWZhdWx0X3NlcnZlcjsKICAgIHNlcnZlcl9uYW1lICBsb2NhbGhvc3Q7CgoKICAgIGV4cGlyZXMgLTE7CgogICAgI2FwcF9wcm90ZWN0X2VuYWJsZSBvbjsKCiAgICBzdWJfZmlsdGVyX29uY2Ugb2ZmOwogICAgc3ViX2ZpbHRlciAnc2VydmVyX2hvc3RuYW1lJyAnJGhvc3RuYW1lJzsKICAgIHN1Yl9maWx0ZXIgJ3NlcnZlcl9hZGRyZXNzJyAgJyRzZXJ2ZXJfYWRkcjokc2VydmVyX3BvcnQnOwogICAgc3ViX2ZpbHRlciAnc2VydmVyX3VybCcgICAgICAnJHJlcXVlc3RfdXJpJzsKICAgIHN1Yl9maWx0ZXIgJ3JlbW90ZV9hZGRyJyAgICAgJyRyZW1vdGVfYWRkcjokcmVtb3RlX3BvcnQnOwogICAgc3ViX2ZpbHRlciAnc2VydmVyX2RhdGUnICAgICAnJHRpbWVfbG9jYWwnOwogICAgc3ViX2ZpbHRlciAnY2xpZW50X2Jyb3dzZXInICAnJGh0dHBfdXNlcl9hZ2VudCc7CiAgICBzdWJfZmlsdGVyICdyZXF1ZXN0X2lkJyAgICAgICckcmVxdWVzdF9pZCc7CiAgICBzdWJfZmlsdGVyICduZ2lueF92ZXJzaW9uJyAgICckbmdpbnhfdmVyc2lvbic7CiAgICBzdWJfZmlsdGVyICdkb2N1bWVudF9yb290JyAgICckZG9jdW1lbnRfcm9vdCc7CiAgICBzdWJfZmlsdGVyICdwcm94aWVkX2Zvcl9pcCcgICckaHR0cF94X2ZvcndhcmRlZF9mb3InOwoKICAgIGxvY2F0aW9uIC8gewogICAgICAgIHJvb3QgICAvdXNyL3NoYXJlL25naW54L2h0bWw7CiAgICAgICAgaW5kZXggIGRlbW9faW5kZXguaHRtbCBpbmRleC5odG1sIGluZGV4Lmh0bTsKICAgIH0KCiAgICBlcnJvcl9wYWdlICAgNTAwIDUwMiA1MDMgNTA0ICAvNTB4Lmh0bWw7CiAgICBsb2NhdGlvbiA9IC81MHguaHRtbCB7CiAgICAgICAgcm9vdCAgIC91c3Ivc2hhcmUvbmdpbngvaHRtbDsKICAgIH0KfQo=","name": "default.conf"}],"name": "/etc/nginx/conf.d"}]}' -H 'Content-type: application/json'
          
